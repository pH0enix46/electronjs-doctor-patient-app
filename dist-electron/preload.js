"use strict";const n=require("electron");n.contextBridge.exposeInMainWorld("electronAPI",{getPatients:()=>n.ipcRenderer.invoke("db:getPatients"),getPatient:e=>n.ipcRenderer.invoke("db:getPatient",e),addPatient:e=>n.ipcRenderer.invoke("db:addPatient",e),updatePatient:(e,d)=>n.ipcRenderer.invoke("db:updatePatient",e,d),deletePatient:e=>n.ipcRenderer.invoke("db:deletePatient",e),getUnsyncedPatients:()=>n.ipcRenderer.invoke("db:getUnsyncedPatients"),markPatientAsSynced:e=>n.ipcRenderer.invoke("db:markPatientAsSynced",e),saveImage:(e,d)=>n.ipcRenderer.invoke("db:saveImage",e,d),deleteImage:e=>n.ipcRenderer.invoke("db:deleteImage",e),addToSyncQueue:(e,d,i,t)=>n.ipcRenderer.invoke("db:addToSyncQueue",e,d,i,t),minimize:()=>n.ipcRenderer.send("window:minimize"),maximize:()=>n.ipcRenderer.send("window:maximize"),close:()=>n.ipcRenderer.send("window:close")});console.log("Preload script loaded successfully!");window.addEventListener("DOMContentLoaded",()=>{const e=(d,i)=>{const t=document.getElementById(d);t&&(t.innerText=i)};for(const d of["chrome","node","electron"])e(`${d}-version`,process.versions[d]||"")});
